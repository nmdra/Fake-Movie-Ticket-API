[{"filePath":"/home/nimendra/Documents/Project/REST-API/Server/config/db.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/nimendra/Documents/Project/REST-API/Server/controller/homeController.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/nimendra/Documents/Project/REST-API/Server/controller/movieController.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/nimendra/Documents/Project/REST-API/Server/controller/ticketController.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/nimendra/Documents/Project/REST-API/Server/controller/userController.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/nimendra/Documents/Project/REST-API/Server/eslint.config.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/nimendra/Documents/Project/REST-API/Server/middleware/authMiddleware.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/nimendra/Documents/Project/REST-API/Server/middleware/errorMiddleware.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/nimendra/Documents/Project/REST-API/Server/middleware/logger.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/nimendra/Documents/Project/REST-API/Server/model/movieModel.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/nimendra/Documents/Project/REST-API/Server/model/ticketModel.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/nimendra/Documents/Project/REST-API/Server/model/userModel.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'test' is defined but never used.","line":57,"column":5,"nodeType":"Identifier","messageId":"unusedVar","endLine":57,"endColumn":9}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import mongoose from \"mongoose\";\nimport bcrypt from \"bcryptjs\";\n\nconst userSchema = new mongoose.Schema(\n    {\n        name: {\n            type: String,\n            required: true\n        },\n        email: {\n            type: String,\n            lowercase: true,\n            required: [true, \"Email not Provided`\"],\n            unique: [true, \"Email already exists\"],\n            validate: {\n                validator: function (v) {\n                    return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(v);\n                },\n                message: '{VALUE} is not a valid email!'\n            }\n        },\n        role: {\n            type: String,\n            lowercase: true,\n            enum: [\"regular\", \"vip\", \"admin\"],\n            default: \"regular\",\n            required: [true, \"Please specify user role\"]\n        },\n        password: {\n            type: String,\n            required: [true, \"Password not provided\"]\n        },\n    },\n\n    {\n        timestamps: true,\n    }\n);\n\nuserSchema.pre('save', async function (next) {\n    if (!this.isModified('password')) {\n        return next();\n    }\n\n    try {\n        const salt = await bcrypt.genSalt(10);\n        this.password = await bcrypt.hash(this.password, salt);\n    } catch (error) {\n        next(error);\n    }\n})\n\nuserSchema.methods.matchPassword = async function (enteredPassword) {\n    return await bcrypt.compare(enteredPassword, this.password);\n};\n\nlet test;\n\nconst User = mongoose.model(\"User\", userSchema);\n\nexport default User;\n\n// joi.dev Validations","usedDeprecatedRules":[]},{"filePath":"/home/nimendra/Documents/Project/REST-API/Server/routes/homeRoute.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/nimendra/Documents/Project/REST-API/Server/routes/movieRoute.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/nimendra/Documents/Project/REST-API/Server/routes/ticketRoute.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/nimendra/Documents/Project/REST-API/Server/routes/userRoute.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/nimendra/Documents/Project/REST-API/Server/server.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/nimendra/Documents/Project/REST-API/Server/utils/customError.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/nimendra/Documents/Project/REST-API/Server/utils/generateToken.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]}]